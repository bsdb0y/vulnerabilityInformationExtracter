import requests
import sys
import subprocess
from bs4 import BeautifulSoup

#def impactDet(cve,client_id,description):
def impactDet(cve,description):
	global cveid
	cveid = cve
	link1 = "https://nvd.nist.gov/vuln/detail/" + str(cveid)
	nvd = requests.get(link1)
	soup1 = BeautifulSoup(nvd.content,'html.parser')
	descrip = description
	print("Impact: \n")
	#for i in range(len(soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[0].find_all('h5'))):


	##cvssVer = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[0].find_all('h5')[0].get_text(strip=True)

	##cvssVer1 = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[0].find_all('h5')[1].get_text(strip=True)
	#cvssBaseHead = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[0].find_all('dt')[0].get_text(strip=True)

	#cvssBaseScore = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[0].find_all('dd')[0].get_text(strip=True)

	#print(cvssBaseHead,cvssBaseScore)

	#print(cvssVer)

	lenSoupofCVSS = len(soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[0].find_all('dt'))

	for upIndex in range(len(soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel"))):

		for index in range(lenSoupofCVSS):
			impactHeading = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[upIndex].find_all('dt')[index].get_text(strip=True)

			impactHeadValue = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")[upIndex].find_all('dd')[index].get_text(strip=True)
			try:
				vulnType = soup1.find_all('ul')[16].get_text(strip=True)
				link_det = soup1.find_all('ul')[16].find_all('a')[0].get_text(strip=True)
				print(vulnType)

			except IndexError:
				vulnType = "N/A"
				print(vulnType)
#Function calling
			advisories(cveid,vulnType,impactHeading,impactHeadValue,soup1,descrip)
			#print(impactHeading,impactHeadValue)
			#if index == 3:
				#print('\n',cvssVer1,'\n')
				#continue







	#get_det = soup1.find_all('div',class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplaceholder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanel")
	#get_in_text = get_det[0].get_text(strip=True)
	#print("Impact: ")
	#print(get_in_text)
	#print("\n Vuln Type: \n")

	'''try:
		vulnType = soup1.find_all('ul')[16].get_text(strip=True)
		link_det = soup1.find_all('ul')[16].find_all('a')[0].get_text(strip=True)
		print(vulnType)

	except IndexError:
		vulnType = "N/A"
		print(vulnType)
'''

def advisories(cve,vulnT,impactHeading,impactHeadValue,soup1,description):


	print("\n Advisories: \n")


	try:

		for i in range(2,len(soup1.find_all('tr'))):


			if len(soup1.find_all('tr')[i].find_all('td')) == 0:
				break

			adv_link = soup1.find_all('tr')[i].find_all('td')[0].get_text(strip=True)
			adv_resource = soup1.find_all('tr')[i].find_all('td')[1].get_text(strip=True)
			adv_type = soup1.find_all('tr')[i].find_all('td')[2].get_text(strip=True)
			adv_source  = soup1.find_all('tr')[i].find_all('td')[3].get_text(strip=True)
			adv_name = soup1.find_all('tr')[i].find_all('td')[4].get_text(strip=True)

			print('\n',adv_link,'\n',adv_resource,'\n',adv_type,'\n',adv_source,'\n',adv_name,'\n')
			
	#advi = soup1.find_all('table',class_="table table-striped table-condensed")[0].get_text(strip=True)
	except IndexError:
		print("N/A")


def descGrab(cve):

	#link = "https://nvd.nist.gov/vuln/detail/" + str(cve)
	link = "https://cve.mitre.org/cgi-bin/cvename.cgi?name=%20" + str(cve)
	page = requests.get(link)
	soup = BeautifulSoup(page.content, 'html.parser')
	#description = soup.find_all('p')[1].get_text()
	description = soup.find_all('td')[8].get_text()

	impactDet(cve,description)
	print("Description: ")
	print(description)


def main():

	global cvssVer
	global cvssVer1
	global impactHeading
	global impactHeadValue
	global vulnType
	global adv_link
	global adv_resource
	global adv_type
	global adv_source
	global adv_name
	global Ip_Adress
	Ip_Adress = "babablacksheep.xyz"
	global Dir_Name
	Dir_Name = "/abc/"

	descGrab(sys.argv[1])
	
if __name__ == '__main__':
    main()


#soup.find_all('p')[1].get_text() #for description

#soup.find_all(class_="col-lg-8 col-md-6 col-sm-12")




#soup.find_all(class_="col-md-6",id="p_lt_WebPartZone1_zoneCenter_pageplacehellder_p_lt_WebPartZone1_zoneCenter_VulnerabilityDetail_VulnFormView_Vuln2CvssPanl")
